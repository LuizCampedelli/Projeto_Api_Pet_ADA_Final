name: Deploy-to-EC2

on:
  push:
    branches:
      - main

jobs:
  deploy-to-ec2:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set Up SSH Key
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > /tmp/ec2-key.pem
          chmod 600 /tmp/ec2-key.pem

      - name: SSH into EC2 and Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-1'
        run: |
          ssh -i /tmp/ec2-key.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_IP }} << EOF
            # Create the /home/ec2-user/app directory if it doesn't exist
            mkdir -p /home/ec2-user/app
            cd /home/ec2-user/app

            # Install git if not already installed
            sudo yum install -y git || sudo apt-get install -y git

            # Check if the directory is already a git repository
            if [ -d ".git" ]; then
              echo "Existing repository found, removing it..."
              rm -rf /home/ec2-user/app/*
            fi

            # Clone the repository again
            git clone https://github.com/LuizCampedelli/Projeto_Api_Pet_ADA_Final.git .

            # Ensure virtual environment exists, create if not
            if [ ! -d "/home/ec2-user/myenv" ]; then
              python3 -m venv /home/ec2-user/myenv
            fi

            # Activate virtual environment
            . /home/ec2-user/myenv/bin/activate

            # Install requirements if requirements.txt exists
            if [ -f requirements.txt ]; then
              pip install --upgrade pip
              pip install -r requirements.txt
            else
              echo "requirements.txt file not found!"
            fi

            # Stop any existing Gunicorn process on port 5000
            sudo fuser -k 5000/tcp || true

            # Start Gunicorn
            nohup gunicorn --bind 0.0.0.0:5000 app:app > gunicorn.log 2>&1 & disown

            # Log message for successful deployment
            echo "Deployment completed successfully!"
          EOF
